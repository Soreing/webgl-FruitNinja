function PomegranateBottom(gl)
{
	this.vertices=[	  -5.000,  -5.000,  -5.000,     -5.000,  -5.000,  -5.000,     -3.852,  -5.000,  -2.228,
					  -5.000,  -5.000,  -5.000,     -3.852,  -5.000,  -2.228,     -5.000,  -5.000,  -2.000,
					  -5.000,  -5.000,  -5.000,     -5.000,  -5.000,  -5.000,     -2.879,  -5.000,  -2.879,
					  -5.000,  -5.000,  -5.000,     -2.879,  -5.000,  -2.879,     -3.852,  -5.000,  -2.228,
					  -5.000,  -5.000,  -5.000,     -5.000,  -5.000,  -5.000,     -2.228,  -5.000,  -3.852,
					  -5.000,  -5.000,  -5.000,     -2.228,  -5.000,  -3.852,     -2.879,  -5.000,  -2.879,
					  -5.000,  -5.000,  -5.000,     -5.000,  -5.000,  -5.000,     -2.000,  -5.000,  -5.000,
					  -5.000,  -5.000,  -5.000,     -2.000,  -5.000,  -5.000,     -2.228,  -5.000,  -3.852,
					  -5.000,  -5.000,  -2.000,     -3.852,  -5.000,  -2.228,     -3.087,  -4.000,  -0.381,
					  -5.000,  -5.000,  -2.000,     -3.087,  -4.000,  -0.381,     -5.000,  -4.000,   0.000,
					  -3.852,  -5.000,  -2.228,     -2.879,  -5.000,  -2.879,     -1.464,  -4.000,  -1.464,
					  -3.852,  -5.000,  -2.228,     -1.464,  -4.000,  -1.464,     -3.087,  -4.000,  -0.381,
					  -2.879,  -5.000,  -2.879,     -2.228,  -5.000,  -3.852,     -0.381,  -4.000,  -3.087,
					  -2.879,  -5.000,  -2.879,     -0.381,  -4.000,  -3.087,     -1.464,  -4.000,  -1.464,
					  -2.228,  -5.000,  -3.852,     -2.000,  -5.000,  -5.000,      0.000,  -4.000,  -5.000,
					  -2.228,  -5.000,  -3.852,      0.000,  -4.000,  -5.000,     -0.381,  -4.000,  -3.087,
					  -5.000,  -4.000,   0.000,     -3.087,  -4.000,  -0.381,     -1.939,  -1.000,   2.391,
					  -5.000,  -4.000,   0.000,     -1.939,  -1.000,   2.391,     -5.000,  -1.000,   3.000,
					  -3.087,  -4.000,  -0.381,     -1.464,  -4.000,  -1.464,      0.657,  -1.000,   0.657,
					  -3.087,  -4.000,  -0.381,      0.657,  -1.000,   0.657,     -1.939,  -1.000,   2.391,
					  -1.464,  -4.000,  -1.464,     -0.381,  -4.000,  -3.087,      2.391,  -1.000,  -1.939,
					  -1.464,  -4.000,  -1.464,      2.391,  -1.000,  -1.939,      0.657,  -1.000,   0.657,
					  -0.381,  -4.000,  -3.087,      0.000,  -4.000,  -5.000,      3.000,  -1.000,  -5.000,
					  -0.381,  -4.000,  -3.087,      3.000,  -1.000,  -5.000,      2.391,  -1.000,  -1.939,
					  -5.000,  -1.000,   3.000,     -1.939,  -1.000,   2.391,     -1.556,   1.000,   3.315,
					  -5.000,  -1.000,   3.000,     -1.556,   1.000,   3.315,     -5.000,   1.000,   4.000,
					  -1.939,  -1.000,   2.391,      0.657,  -1.000,   0.657,      1.364,   1.000,   1.364,
					  -1.939,  -1.000,   2.391,      1.364,   1.000,   1.364,     -1.556,   1.000,   3.315,
					   0.657,  -1.000,   0.657,      2.391,  -1.000,  -1.939,      3.315,   1.000,  -1.556,
					   0.657,  -1.000,   0.657,      3.315,   1.000,  -1.556,      1.364,   1.000,   1.364,
					   2.391,  -1.000,  -1.939,      3.000,  -1.000,  -5.000,      4.000,   1.000,  -5.000,
					   2.391,  -1.000,  -1.939,      4.000,   1.000,  -5.000,      3.315,   1.000,  -1.556,
					  -5.000,   1.000,   4.000,     -1.556,   1.000,   3.315,     -1.173,   4.000,   4.239,
					  -5.000,   1.000,   4.000,     -1.173,   4.000,   4.239,     -5.000,   4.000,   5.000,
					  -1.556,   1.000,   3.315,      1.364,   1.000,   1.364,      2.071,   4.000,   2.071,
					  -1.556,   1.000,   3.315,      2.071,   4.000,   2.071,     -1.173,   4.000,   4.239,
					   1.364,   1.000,   1.364,      3.315,   1.000,  -1.556,      4.239,   4.000,  -1.173,
					   1.364,   1.000,   1.364,      4.239,   4.000,  -1.173,      2.071,   4.000,   2.071,
					   3.315,   1.000,  -1.556,      4.000,   1.000,  -5.000,      5.000,   4.000,  -5.000,
					   3.315,   1.000,  -1.556,      5.000,   4.000,  -5.000,      4.239,   4.000,  -1.173,
					  -5.000,   4.000,   5.000,     -1.173,   4.000,   4.239,     -5.000,   5.000,  -5.000,
					  -5.000,   4.000,   5.000,     -5.000,   5.000,  -5.000,     -5.000,   5.000,  -5.000,
					  -1.173,   4.000,   4.239,      2.071,   4.000,   2.071,     -5.000,   5.000,  -5.000,
					  -1.173,   4.000,   4.239,     -5.000,   5.000,  -5.000,     -5.000,   5.000,  -5.000,
					   2.071,   4.000,   2.071,      4.239,   4.000,  -1.173,     -5.000,   5.000,  -5.000,
					   2.071,   4.000,   2.071,     -5.000,   5.000,  -5.000,     -5.000,   5.000,  -5.000,
					   4.239,   4.000,  -1.173,      5.000,   4.000,  -5.000,     -5.000,   5.000,  -5.000,
					   4.239,   4.000,  -1.173,     -5.000,   5.000,  -5.000,     -5.000,   5.000,  -5.000,
					  -5.000,  -5.000,  -5.000,     -5.000,  -5.000,  -2.000,     -5.000,   5.000,  -5.000,
					  -5.000,  -5.000,  -2.000,     -5.000,  -4.000,   0.000,     -5.000,   5.000,  -5.000,
					  -5.000,  -4.000,   0.000,     -5.000,  -1.000,   3.000,     -5.000,   5.000,  -5.000,
					  -5.000,  -1.000,   3.000,     -5.000,   1.000,   4.000,     -5.000,   5.000,  -5.000,
					  -5.000,   1.000,   4.000,     -5.000,   4.000,   5.000,     -5.000,   5.000,  -5.000,
					  -2.000,  -5.000,  -5.000,     -5.000,  -5.000,  -5.000,     -5.000,   5.000,  -5.000,
					   0.000,  -4.000,  -5.000,     -2.000,  -5.000,  -5.000,     -5.000,   5.000,  -5.000,
					   3.000,  -1.000,  -5.000,      0.000,  -4.000,  -5.000,     -5.000,   5.000,  -5.000,
					   4.000,   1.000,  -5.000,      3.000,  -1.000,  -5.000,     -5.000,   5.000,  -5.000,
					   5.000,   4.000,  -5.000,      4.000,   1.000,  -5.000,     -5.000,   5.000,  -5.000, ];
	
	this.colors=[	  1,  1,  1,     1,  1,  1,     1,  1,  1,
					  1,  1,  1,     1,  1,  1,     1,  1,  1,
					  1,  1,  1,     1,  1,  1,     1,  1,  1,
					  1,  1,  1,     1,  1,  1,     1,  1,  1,
					  1,  1,  1,     1,  1,  1,     1,  1,  1,
					  1,  1,  1,     1,  1,  1,     1,  1,  1,
					  1,  1,  1,     1,  1,  1,     1,  1,  1,
					  1,  1,  1,     1,  1,  1,     1,  1,  1,
					  1,  1,  1,     1,  1,  1,     1,  1,  1,
					  1,  1,  1,     1,  1,  1,     1,  1,  1,
					  1,  1,  1,     1,  1,  1,     1,  1,  1,
					  1,  1,  1,     1,  1,  1,     1,  1,  1,
					  1,  1,  1,     1,  1,  1,     1,  1,  1,
					  1,  1,  1,     1,  1,  1,     1,  1,  1,
					  1,  1,  1,     1,  1,  1,     1,  1,  1,
					  1,  1,  1,     1,  1,  1,     1,  1,  1,
					  1,  1,  1,     1,  1,  1,     1,  1,  1,
					  1,  1,  1,     1,  1,  1,     1,  1,  1,
					  1,  1,  1,     1,  1,  1,     1,  1,  1,
					  1,  1,  1,     1,  1,  1,     1,  1,  1,
					  1,  1,  1,     1,  1,  1,     1,  1,  1,
					  1,  1,  1,     1,  1,  1,     1,  1,  1,
					  1,  1,  1,     1,  1,  1,     1,  1,  1,
					  1,  1,  1,     1,  1,  1,     1,  1,  1,
					  1,  1,  1,     1,  1,  1,     1,  1,  1,
					  1,  1,  1,     1,  1,  1,     1,  1,  1,
					  1,  1,  1,     1,  1,  1,     1,  1,  1,
					  1,  1,  1,     1,  1,  1,     1,  1,  1,
					  1,  1,  1,     1,  1,  1,     1,  1,  1,
					  1,  1,  1,     1,  1,  1,     1,  1,  1,
					  1,  1,  1,     1,  1,  1,     1,  1,  1,
					  1,  1,  1,     1,  1,  1,     1,  1,  1,
					  1,  1,  1,     1,  1,  1,     1,  1,  1,
					  1,  1,  1,     1,  1,  1,     1,  1,  1,
					  1,  1,  1,     1,  1,  1,     1,  1,  1,
					  1,  1,  1,     1,  1,  1,     1,  1,  1,
					  1,  1,  1,     1,  1,  1,     1,  1,  1,
					  1,  1,  1,     1,  1,  1,     1,  1,  1,
					  1,  1,  1,     1,  1,  1,     1,  1,  1,
					  1,  1,  1,     1,  1,  1,     1,  1,  1,
					  1,  1,  1,     1,  1,  1,     1,  1,  1,
					  1,  1,  1,     1,  1,  1,     1,  1,  1,
					  1,  1,  1,     1,  1,  1,     1,  1,  1,
					  1,  1,  1,     1,  1,  1,     1,  1,  1,
					  1,  1,  1,     1,  1,  1,     1,  1,  1,
					  1,  1,  1,     1,  1,  1,     1,  1,  1,
					  1,  1,  1,     1,  1,  1,     1,  1,  1,
					  1,  1,  1,     1,  1,  1,     1,  1,  1,
					  1,  1,  1,     1,  1,  1,     1,  1,  1,
					  1,  1,  1,     1,  1,  1,     1,  1,  1,
					  1,  1,  1,     1,  1,  1,     1,  1,  1,
					  1,  1,  1,     1,  1,  1,     1,  1,  1,
					  1,  1,  1,     1,  1,  1,     1,  1,  1,
					  1,  1,  1,     1,  1,  1,     1,  1,  1,
					  1,  1,  1,     1,  1,  1,     1,  1,  1,
					  1,  1,  1,     1,  1,  1,     1,  1,  1,
					  1,  1,  1,     1,  1,  1,     1,  1,  1,
					  1,  1,  1,     1,  1,  1,     1,  1,  1, ];
				 
	this.UVMap =[   0.100,0.600,   0.400,0.600,   0.400,0.900,
					0.100,0.600,   0.400,0.900,   0.100,0.900,
					0.100,0.600,   0.400,0.600,   0.400,0.900,
					0.100,0.600,   0.400,0.900,   0.100,0.900,
					0.100,0.600,   0.400,0.600,   0.400,0.900,
					0.100,0.600,   0.400,0.900,   0.100,0.900,
					0.100,0.600,   0.400,0.600,   0.400,0.900,
					0.100,0.600,   0.400,0.900,   0.100,0.900,
					0.100,0.600,   0.400,0.600,   0.400,0.900,
					0.100,0.600,   0.400,0.900,   0.100,0.900,
					0.100,0.600,   0.400,0.600,   0.400,0.900,
					0.100,0.600,   0.400,0.900,   0.100,0.900,
					0.100,0.600,   0.400,0.600,   0.400,0.900,
					0.100,0.600,   0.400,0.900,   0.100,0.900,
					0.100,0.600,   0.400,0.600,   0.400,0.900,
					0.100,0.600,   0.400,0.900,   0.100,0.900,
					0.100,0.600,   0.400,0.600,   0.400,0.900,
					0.100,0.600,   0.400,0.900,   0.100,0.900,
					0.100,0.600,   0.400,0.600,   0.400,0.900,
					0.100,0.600,   0.400,0.900,   0.100,0.900,
					0.100,0.600,   0.400,0.600,   0.400,0.900,
					0.100,0.600,   0.400,0.900,   0.100,0.900,
					0.100,0.600,   0.400,0.600,   0.400,0.900,
					0.100,0.600,   0.400,0.900,   0.100,0.900,
					0.100,0.600,   0.400,0.600,   0.400,0.900,
					0.100,0.600,   0.400,0.900,   0.100,0.900,
					0.100,0.600,   0.400,0.600,   0.400,0.900,
					0.100,0.600,   0.400,0.900,   0.100,0.900,
					0.100,0.600,   0.400,0.600,   0.400,0.900,
					0.100,0.600,   0.400,0.900,   0.100,0.900,
					0.100,0.600,   0.400,0.600,   0.400,0.900,
					0.100,0.600,   0.400,0.900,   0.100,0.900,
					0.100,0.600,   0.400,0.600,   0.400,0.900,
					0.100,0.600,   0.400,0.900,   0.100,0.900,
					0.100,0.600,   0.400,0.600,   0.400,0.900,
					0.100,0.600,   0.400,0.900,   0.100,0.900,
					0.100,0.600,   0.400,0.600,   0.400,0.900,
					0.100,0.600,   0.400,0.900,   0.100,0.900,
					0.100,0.600,   0.400,0.600,   0.400,0.900,
					0.100,0.600,   0.400,0.900,   0.100,0.900,
					0.500,0.500,   0.750,0.500,   0.750,1.000,
					0.500,0.500,   0.750,0.500,   0.750,1.000,
					0.500,0.500,   0.750,0.500,   0.750,1.000,
					0.500,0.500,   0.750,0.500,   0.750,1.000,
					0.500,0.500,   0.750,0.500,   0.750,1.000,
					0.500,0.500,   0.750,0.500,   0.750,1.000,
					0.500,0.500,   0.750,0.500,   0.750,1.000,
					0.500,0.500,   0.750,0.500,   0.750,1.000,
					0.500,0.500,   0.750,0.500,   0.750,1.000,
					0.500,0.500,   0.750,0.500,   0.750,1.000,
					0.500,0.500,   0.750,0.500,   0.750,1.000,
					0.500,0.500,   0.750,0.500,   0.750,1.000,
					0.500,0.500,   0.750,0.500,   0.750,1.000,
					0.500,0.500,   0.750,0.500,   0.750,1.000,
					0.500,0.500,   0.750,0.500,   0.750,1.000,
					0.500,0.500,   0.750,0.500,   0.750,1.000,
					0.500,0.500,   0.750,0.500,   0.750,1.000,
					0.500,0.500,   0.750,0.500,   0.750,1.000,
					0.500,0.500,   1.000,1.000,   0.500,1.000,
					0.500,0.500,   1.000,0.500,   1.000,1.000,
					0.500,0.500,   1.000,1.000,   0.500,1.000,
					0.500,0.500,   1.000,0.500,   1.000,1.000,
					0.500,0.500,   1.000,1.000,   0.500,1.000,
					0.500,0.500,   1.000,0.500,   1.000,1.000,
					0.500,0.500,   1.000,1.000,   0.500,1.000,
					0.500,0.500,   1.000,0.500,   1.000,1.000,
					0.500,0.500,   1.000,1.000,   0.500,1.000,
					0.500,0.500,   1.000,0.500,   1.000,1.000,
					0.500,0.500,   1.000,1.000,   0.500,1.000,
					0.500,0.500,   1.000,0.500,   1.000,1.000,
					0.500,0.500,   1.000,1.000,   0.500,1.000,
					0.500,0.500,   1.000,0.500,   1.000,1.000,
					0.500,0.500,   1.000,1.000,   0.500,1.000,
					0.500,0.500,   1.000,0.500,   1.000,1.000,
					0.500,0.500,   1.000,1.000,   0.500,1.000, ];
					
	this.Normals = CalculateNormals(this.vertices);
	
	this.vertexBuff =  gl.createBuffer(),	//Buffer for loading vertexes into the shader
	this.colorBuff  =  gl.createBuffer(),	//Buffer for loading colors into the shader
	this.normalBuff =  gl.createBuffer(),	//Buffer for loading normals into the shader
	this.texCorBuff =  gl.createBuffer(),	//Buffer for loading object indexes into the shader
	
	this.Duplicate = function()
	{
		var obj      = new Placeholder();
		obj.vertices = this.vertices.slice();
		obj.colors   = this.colors.slice();
		obj.UVMap    = this.UVMap.slice();		
		obj.Normals  = this.Normals.slice();
		
		obj.vertexBuff =  gl.createBuffer();
		obj.colorBuff  =  gl.createBuffer();
		obj.normalBuff =  gl.createBuffer();
		obj.texCorBuff =  gl.createBuffer();
		
		obj.Refresh();
		return obj;
	},
	
	this.Refresh = function()
	{
		//Loading the vertex information into the vertex buffer
		gl.bindBuffer( gl.ARRAY_BUFFER, this.vertexBuff );
		gl.bufferData( gl.ARRAY_BUFFER, new Float32Array(this.vertices), gl.STATIC_DRAW );

			
		//Loading the color information into the color buffer
		gl.bindBuffer( gl.ARRAY_BUFFER, this.colorBuff );
		gl.bufferData( gl.ARRAY_BUFFER, new Float32Array(this.colors), gl.STATIC_DRAW );
		
		
		//Loading the normals information into the color buffer
		gl.bindBuffer( gl.ARRAY_BUFFER, this.normalBuff );
		gl.bufferData( gl.ARRAY_BUFFER, new Float32Array(this.Normals), gl.STATIC_DRAW );

			
		//Loading the object index information into the texture coordinate buffer
		gl.bindBuffer( gl.ARRAY_BUFFER, this.texCorBuff );
		gl.bufferData( gl.ARRAY_BUFFER, new Float32Array(this.UVMap), gl.STATIC_DRAW );
	};
	
	this.Refresh();
}



function PomegranateTop(gl)
{
	this.vertices=[	-5.000,   3.750,  -3.000,     -5.000,   3.750,  -5.000,     -5.000,  -6.250,  -5.000, //Body
				  -5.000,   2.750,  -2.000,     -5.000,   3.750,  -3.000,     -5.000,  -6.250,  -5.000,
				  -5.000,   1.750,   0.000,     -5.000,   2.750,  -2.000,     -5.000,  -6.250,  -5.000,
				  -5.000,  -1.250,   3.000,     -5.000,   1.750,   0.000,     -5.000,  -6.250,  -5.000,
				  -5.000,  -3.250,   4.000,     -5.000,  -1.250,   3.000,     -5.000,  -6.250,  -5.000,
				  -5.000,  -6.250,   5.000,     -5.000,  -3.250,   4.000,     -5.000,  -6.250,  -5.000,
				  -5.000,   3.750,  -5.000,     -3.000,   3.750,  -5.000,     -5.000,  -6.250,  -5.000,
				  -3.000,   3.750,  -5.000,     -2.000,   2.750,  -5.000,     -5.000,  -6.250,  -5.000,
				  -2.000,   2.750,  -5.000,      0.000,   1.750,  -5.000,     -5.000,  -6.250,  -5.000,
				   0.000,   1.750,  -5.000,      3.000,  -1.250,  -5.000,     -5.000,  -6.250,  -5.000,
				   3.000,  -1.250,  -5.000,      4.000,  -3.250,  -5.000,     -5.000,  -6.250,  -5.000,
				   4.000,  -3.250,  -5.000,      5.000,  -6.250,  -5.000,     -5.000,  -6.250,  -5.000,
				  -5.000,  -6.250,  -5.000,     -5.000,  -6.250,  -5.000,     -1.173,  -6.250,   4.239,
				  -5.000,  -6.250,  -5.000,     -1.173,  -6.250,   4.239,     -5.000,  -6.250,   5.000,
				  -5.000,  -6.250,  -5.000,     -5.000,  -6.250,  -5.000,      2.071,  -6.250,   2.071,
				  -5.000,  -6.250,  -5.000,      2.071,  -6.250,   2.071,     -1.173,  -6.250,   4.239,
				  -5.000,  -6.250,  -5.000,     -5.000,  -6.250,  -5.000,      4.239,  -6.250,  -1.173,
				  -5.000,  -6.250,  -5.000,      4.239,  -6.250,  -1.173,      2.071,  -6.250,   2.071,
				  -5.000,  -6.250,  -5.000,     -5.000,  -6.250,  -5.000,      5.000,  -6.250,  -5.000,
				  -5.000,  -6.250,  -5.000,      5.000,  -6.250,  -5.000,      4.239,  -6.250,  -1.173,
				  -5.000,  -6.250,   5.000,     -1.173,  -6.250,   4.239,     -1.556,  -3.250,   3.315,
				  -5.000,  -6.250,   5.000,     -1.556,  -3.250,   3.315,     -5.000,  -3.250,   4.000,
				  -1.173,  -6.250,   4.239,      2.071,  -6.250,   2.071,      1.364,  -3.250,   1.364,
				  -1.173,  -6.250,   4.239,      1.364,  -3.250,   1.364,     -1.556,  -3.250,   3.315,
				   2.071,  -6.250,   2.071,      4.239,  -6.250,  -1.173,      3.315,  -3.250,  -1.556,
				   2.071,  -6.250,   2.071,      3.315,  -3.250,  -1.556,      1.364,  -3.250,   1.364,
				   4.239,  -6.250,  -1.173,      5.000,  -6.250,  -5.000,      4.000,  -3.250,  -5.000,
				   4.239,  -6.250,  -1.173,      4.000,  -3.250,  -5.000,      3.315,  -3.250,  -1.556,
				  -5.000,  -3.250,   4.000,     -1.556,  -3.250,   3.315,     -1.939,  -1.250,   2.391,
				  -5.000,  -3.250,   4.000,     -1.939,  -1.250,   2.391,     -5.000,  -1.250,   3.000,
				  -1.556,  -3.250,   3.315,      1.364,  -3.250,   1.364,      0.657,  -1.250,   0.657,
				  -1.556,  -3.250,   3.315,      0.657,  -1.250,   0.657,     -1.939,  -1.250,   2.391,
				   1.364,  -3.250,   1.364,      3.315,  -3.250,  -1.556,      2.391,  -1.250,  -1.939,
				   1.364,  -3.250,   1.364,      2.391,  -1.250,  -1.939,      0.657,  -1.250,   0.657,
				   3.315,  -3.250,  -1.556,      4.000,  -3.250,  -5.000,      3.000,  -1.250,  -5.000,
				   3.315,  -3.250,  -1.556,      3.000,  -1.250,  -5.000,      2.391,  -1.250,  -1.939,
				  -5.000,  -1.250,   3.000,     -1.939,  -1.250,   2.391,     -3.087,   1.750,  -0.381,
				  -5.000,  -1.250,   3.000,     -3.087,   1.750,  -0.381,     -5.000,   1.750,   0.000,
				  -1.939,  -1.250,   2.391,      0.657,  -1.250,   0.657,     -1.464,   1.750,  -1.464,
				  -1.939,  -1.250,   2.391,     -1.464,   1.750,  -1.464,     -3.087,   1.750,  -0.381,
				   0.657,  -1.250,   0.657,      2.391,  -1.250,  -1.939,     -0.381,   1.750,  -3.087,
				   0.657,  -1.250,   0.657,     -0.381,   1.750,  -3.087,     -1.464,   1.750,  -1.464,
				   2.391,  -1.250,  -1.939,      3.000,  -1.250,  -5.000,      0.000,   1.750,  -5.000,
				   2.391,  -1.250,  -1.939,      0.000,   1.750,  -5.000,     -0.381,   1.750,  -3.087,
				  -5.000,   1.750,   0.000,     -3.087,   1.750,  -0.381,     -3.852,   2.750,  -2.228,
				  -5.000,   1.750,   0.000,     -3.852,   2.750,  -2.228,     -5.000,   2.750,  -2.000,
				  -3.087,   1.750,  -0.381,     -1.464,   1.750,  -1.464,     -2.879,   2.750,  -2.879,
				  -3.087,   1.750,  -0.381,     -2.879,   2.750,  -2.879,     -3.852,   2.750,  -2.228,
				  -1.464,   1.750,  -1.464,     -0.381,   1.750,  -3.087,     -2.228,   2.750,  -3.852,
				  -1.464,   1.750,  -1.464,     -2.228,   2.750,  -3.852,     -2.879,   2.750,  -2.879,
				  -0.381,   1.750,  -3.087,      0.000,   1.750,  -5.000,     -2.000,   2.750,  -5.000,
				  -0.381,   1.750,  -3.087,     -2.000,   2.750,  -5.000,     -2.228,   2.750,  -3.852,
				  -5.000,   2.750,  -2.000,     -3.852,   2.750,  -2.228,     -4.235,   3.750,  -3.152,
				  -5.000,   2.750,  -2.000,     -4.235,   3.750,  -3.152,     -5.000,   3.750,  -3.000,
				  -3.852,   2.750,  -2.228,     -2.879,   2.750,  -2.879,     -3.586,   3.750,  -3.586,
				  -3.852,   2.750,  -2.228,     -3.586,   3.750,  -3.586,     -4.235,   3.750,  -3.152,
				  -2.879,   2.750,  -2.879,     -2.228,   2.750,  -3.852,     -3.152,   3.750,  -4.235,
				  -2.879,   2.750,  -2.879,     -3.152,   3.750,  -4.235,     -3.586,   3.750,  -3.586,
				  -2.228,   2.750,  -3.852,     -2.000,   2.750,  -5.000,     -3.000,   3.750,  -5.000,
				  -2.228,   2.750,  -3.852,     -3.000,   3.750,  -5.000,     -3.152,   3.750,  -4.235,
				  -5.000,   3.750,  -3.000,     -4.235,   3.750,  -3.152,     -5.000,   3.750,  -5.000,
				  -5.000,   3.750,  -3.000,     -5.000,   3.750,  -5.000,     -5.000,   3.750,  -5.000,
				  -4.235,   3.750,  -3.152,     -3.586,   3.750,  -3.586,     -5.000,   3.750,  -5.000,
				  -4.235,   3.750,  -3.152,     -5.000,   3.750,  -5.000,     -5.000,   3.750,  -5.000,
				  -3.586,   3.750,  -3.586,     -3.152,   3.750,  -4.235,     -5.000,   3.750,  -5.000,
				  -3.586,   3.750,  -3.586,     -5.000,   3.750,  -5.000,     -5.000,   3.750,  -5.000,
				  -3.152,   3.750,  -4.235,     -3.000,   3.750,  -5.000,     -5.000,   3.750,  -5.000,
				  -3.152,   3.750,  -4.235,     -5.000,   3.750,  -5.000,     -5.000,   3.750,  -5.000,
  
  
					-5.000,   3.750,  -3.000,     -4.235,   3.750,  -3.152,     -4.235,   4.750,  -3.152,	//Stalks
					-5.000,   3.750,  -3.000,     -4.235,   4.750,  -3.152,     -4.739,   4.750,  -3.017,
					-4.235,   3.750,  -3.152,     -3.586,   3.750,  -3.586,     -3.782,   4.750,  -3.413,
					-4.235,   3.750,  -3.152,     -3.782,   4.750,  -3.413,     -4.235,   4.750,  -3.152,
					-3.586,   3.750,  -3.586,     -3.152,   3.750,  -4.235,     -3.152,   4.750,  -4.235,
					-3.586,   3.750,  -3.586,     -3.152,   4.750,  -4.235,     -3.413,   4.750,  -3.782,
					-3.152,   3.750,  -4.235,     -3.000,   3.750,  -5.000,     -3.017,   4.750,  -4.739,
					-3.152,   3.750,  -4.235,     -3.017,   4.750,  -4.739,     -3.152,   4.750,  -4.235,
					-4.739,   4.750,  -3.017,     -4.235,   4.750,  -3.152,     -3.852,   5.750,  -2.228,
					-4.235,   4.750,  -3.152,     -3.782,   4.750,  -3.413,     -3.852,   5.750,  -2.228,
					-3.413,   4.750,  -3.782,     -3.152,   4.750,  -4.235,     -2.228,   5.750,  -3.852,
					-3.152,   4.750,  -4.235,     -3.017,   4.750,  -4.739,     -2.228,   5.750,  -3.852,
  ];
	
	this.colors=[	1,  1,  1,     1,  1,  1,     1,  1,  1,
					1,  1,  1,     1,  1,  1,     1,  1,  1,
					1,  1,  1,     1,  1,  1,     1,  1,  1,
					1,  1,  1,     1,  1,  1,     1,  1,  1,
					1,  1,  1,     1,  1,  1,     1,  1,  1,
					1,  1,  1,     1,  1,  1,     1,  1,  1,
					1,  1,  1,     1,  1,  1,     1,  1,  1,
					1,  1,  1,     1,  1,  1,     1,  1,  1,
					1,  1,  1,     1,  1,  1,     1,  1,  1,
					1,  1,  1,     1,  1,  1,     1,  1,  1,
					1,  1,  1,     1,  1,  1,     1,  1,  1,
					1,  1,  1,     1,  1,  1,     1,  1,  1,
					1,  1,  1,     1,  1,  1,     1,  1,  1,
					1,  1,  1,     1,  1,  1,     1,  1,  1,
					1,  1,  1,     1,  1,  1,     1,  1,  1,
					1,  1,  1,     1,  1,  1,     1,  1,  1,
					1,  1,  1,     1,  1,  1,     1,  1,  1,
					1,  1,  1,     1,  1,  1,     1,  1,  1,
					1,  1,  1,     1,  1,  1,     1,  1,  1,
					1,  1,  1,     1,  1,  1,     1,  1,  1,
					1,  1,  1,     1,  1,  1,     1,  1,  1,
					1,  1,  1,     1,  1,  1,     1,  1,  1,
					1,  1,  1,     1,  1,  1,     1,  1,  1,
					1,  1,  1,     1,  1,  1,     1,  1,  1,
					1,  1,  1,     1,  1,  1,     1,  1,  1,
					1,  1,  1,     1,  1,  1,     1,  1,  1,
					1,  1,  1,     1,  1,  1,     1,  1,  1,
					1,  1,  1,     1,  1,  1,     1,  1,  1,
					1,  1,  1,     1,  1,  1,     1,  1,  1,
					1,  1,  1,     1,  1,  1,     1,  1,  1,
					1,  1,  1,     1,  1,  1,     1,  1,  1,
					1,  1,  1,     1,  1,  1,     1,  1,  1,
					1,  1,  1,     1,  1,  1,     1,  1,  1,
					1,  1,  1,     1,  1,  1,     1,  1,  1,
					1,  1,  1,     1,  1,  1,     1,  1,  1,
					1,  1,  1,     1,  1,  1,     1,  1,  1,
					1,  1,  1,     1,  1,  1,     1,  1,  1,
					1,  1,  1,     1,  1,  1,     1,  1,  1,
					1,  1,  1,     1,  1,  1,     1,  1,  1,
					1,  1,  1,     1,  1,  1,     1,  1,  1,
					1,  1,  1,     1,  1,  1,     1,  1,  1,
					1,  1,  1,     1,  1,  1,     1,  1,  1,
					1,  1,  1,     1,  1,  1,     1,  1,  1,
					1,  1,  1,     1,  1,  1,     1,  1,  1,
					1,  1,  1,     1,  1,  1,     1,  1,  1,
					1,  1,  1,     1,  1,  1,     1,  1,  1,
					1,  1,  1,     1,  1,  1,     1,  1,  1,
					1,  1,  1,     1,  1,  1,     1,  1,  1,
					1,  1,  1,     1,  1,  1,     1,  1,  1,
					1,  1,  1,     1,  1,  1,     1,  1,  1,
					1,  1,  1,     1,  1,  1,     1,  1,  1,
					1,  1,  1,     1,  1,  1,     1,  1,  1,
					1,  1,  1,     1,  1,  1,     1,  1,  1,
					1,  1,  1,     1,  1,  1,     1,  1,  1,
					1,  1,  1,     1,  1,  1,     1,  1,  1,
					1,  1,  1,     1,  1,  1,     1,  1,  1,
					1,  1,  1,     1,  1,  1,     1,  1,  1,
					1,  1,  1,     1,  1,  1,     1,  1,  1,
					1,  1,  1,     1,  1,  1,     1,  1,  1,
					1,  1,  1,     1,  1,  1,     1,  1,  1,
					1,  1,  1,     1,  1,  1,     1,  1,  1,
					1,  1,  1,     1,  1,  1,     1,  1,  1,
					1,  1,  1,     1,  1,  1,     1,  1,  1,
					1,  1,  1,     1,  1,  1,     1,  1,  1,
					1,  1,  1,     1,  1,  1,     1,  1,  1,
					1,  1,  1,     1,  1,  1,     1,  1,  1,
					1,  1,  1,     1,  1,  1,     1,  1,  1,
					1,  1,  1,     1,  1,  1,     1,  1,  1, 
					1,  1,  1,     1,  1,  1,     1,  1,  1,
					1,  1,  1,     1,  1,  1,     1,  1,  1,
					1,  1,  1,     1,  1,  1,     1,  1,  1,
					1,  1,  1,     1,  1,  1,     1,  1,  1,
					1,  1,  1,     1,  1,  1,     1,  1,  1,
					1,  1,  1,     1,  1,  1,     1,  1,  1,
					1,  1,  1,     1,  1,  1,     1,  1,  1,
					1,  1,  1,     1,  1,  1,     1,  1,  1,
					1,  1,  1,     1,  1,  1,     1,  1,  1,
					1,  1,  1,     1,  1,  1,     1,  1,  1,
					1,  1,  1,     1,  1,  1,     1,  1,  1,
					1,  1,  1,     1,  1,  1,     1,  1,  1,
					1,  1,  1,     1,  1,  1,     1,  1,  1,
];
				 
	this.UVMap =[ 	0.500,0.500,   0.750,0.500,   0.750,1.000,
					0.500,0.500,   0.750,0.500,   0.750,1.000,
					0.500,0.500,   0.750,0.500,   0.750,1.000,
					0.500,0.500,   0.750,0.500,   0.750,1.000,
					0.500,0.500,   0.750,0.500,   0.750,1.000,
					0.500,0.500,   0.750,0.500,   0.750,1.000,
					0.500,0.500,   0.750,0.500,   0.750,1.000,
					0.500,0.500,   0.750,0.500,   0.750,1.000,
					0.500,0.500,   0.750,0.500,   0.750,1.000,
					0.500,0.500,   0.750,0.500,   0.750,1.000,
					0.500,0.500,   0.750,0.500,   0.750,1.000,
					0.500,0.500,   0.750,0.500,   0.750,1.000,
					0.750,1.000,   0.500,0.500,   0.750,0.500, 
					0.750,1.000,   0.500,0.500,   0.750,0.500, 
					0.750,1.000,   0.500,0.500,   0.750,0.500, 
					0.750,1.000,   0.500,0.500,   0.750,0.500, 
					0.750,1.000,   0.500,0.500,   0.750,0.500,  
					0.750,1.000,   0.500,0.500,   0.750,0.500,  
					0.750,1.000,   0.500,0.500,   0.750,0.500,  
					0.750,1.000,   0.500,0.500,   0.750,0.500, 
					
					0.100,0.600,   0.400,0.600,   0.400,0.900,
					0.100,0.600,   0.400,0.900,   0.100,0.900,
					0.100,0.600,   0.400,0.600,   0.400,0.900,
					0.100,0.600,   0.400,0.900,   0.100,0.900,
					0.100,0.600,   0.400,0.600,   0.400,0.900,
					0.100,0.600,   0.400,0.900,   0.100,0.900,
					0.100,0.600,   0.400,0.600,   0.400,0.900,
					0.100,0.600,   0.400,0.900,   0.100,0.900,
					0.100,0.600,   0.400,0.600,   0.400,0.900,
					0.100,0.600,   0.400,0.900,   0.100,0.900,
					0.100,0.600,   0.400,0.600,   0.400,0.900,
					0.100,0.600,   0.400,0.900,   0.100,0.900,
					0.100,0.600,   0.400,0.600,   0.400,0.900,
					0.100,0.600,   0.400,0.900,   0.100,0.900,
					0.100,0.600,   0.400,0.600,   0.400,0.900,
					0.100,0.600,   0.400,0.900,   0.100,0.900,
					0.100,0.600,   0.400,0.600,   0.400,0.900,
					0.100,0.600,   0.400,0.900,   0.100,0.900,
					0.100,0.600,   0.400,0.600,   0.400,0.900,
					0.100,0.600,   0.400,0.900,   0.100,0.900,
					0.100,0.600,   0.400,0.600,   0.400,0.900,
					0.100,0.600,   0.400,0.900,   0.100,0.900,
					0.100,0.600,   0.400,0.600,   0.400,0.900,
					0.100,0.600,   0.400,0.900,   0.100,0.900,
					0.100,0.600,   0.400,0.600,   0.400,0.900,
					0.100,0.600,   0.400,0.900,   0.100,0.900,
					0.100,0.600,   0.400,0.600,   0.400,0.900,
					0.100,0.600,   0.400,0.900,   0.100,0.900,
					0.100,0.600,   0.400,0.600,   0.400,0.900,
					0.100,0.600,   0.400,0.900,   0.100,0.900,
					0.100,0.600,   0.400,0.600,   0.400,0.900,
					0.100,0.600,   0.400,0.900,   0.100,0.900,
					0.100,0.600,   0.400,0.600,   0.400,0.900,
					0.100,0.600,   0.400,0.900,   0.100,0.900,
					0.100,0.600,   0.400,0.600,   0.400,0.900,
					0.100,0.600,   0.400,0.900,   0.100,0.900,
					0.100,0.600,   0.400,0.600,   0.400,0.900,
					0.100,0.600,   0.400,0.900,   0.100,0.900,
					0.100,0.600,   0.400,0.600,   0.400,0.900,
					0.100,0.600,   0.400,0.900,   0.100,0.900,
					0.600,0.100,   0.900,0.100,   0.900,0.400,
					0.600,0.100,   0.900,0.400,   0.600,0.400,
					0.600,0.100,   0.900,0.100,   0.900,0.400,
					0.600,0.100,   0.900,0.400,   0.600,0.400,
					0.600,0.100,   0.900,0.100,   0.900,0.400,
					0.600,0.100,   0.900,0.400,   0.600,0.400,
					0.600,0.100,   0.900,0.100,   0.900,0.400,
					0.600,0.100,   0.900,0.400,   0.600,0.400,
					0.100,0.600,   0.400,0.600,   0.400,0.900,
					0.100,0.600,   0.400,0.900,   0.100,0.900,
					0.100,0.600,   0.400,0.600,   0.400,0.900,
					0.100,0.600,   0.400,0.900,   0.100,0.900,
					0.100,0.600,   0.400,0.600,   0.400,0.900,
					0.100,0.600,   0.400,0.900,   0.100,0.900,
					0.100,0.600,   0.400,0.600,   0.400,0.900,
					0.100,0.600,   0.400,0.900,   0.100,0.900,
					0.100,0.600,   0.400,0.600,   0.400,0.900,
					0.100,0.600,   0.400,0.900,   0.100,0.900,
					0.100,0.600,   0.400,0.600,   0.400,0.900,
					0.100,0.600,   0.400,0.900,   0.100,0.900,
					0.100,0.600,   0.400,0.600,   0.400,0.900,
					0.100,0.600,   0.400,0.900,   0.100,0.900,
					0.100,0.600,   0.400,0.600,   0.400,0.900,
					0.100,0.600,   0.400,0.900,   0.100,0.900,];
					
	this.Normals = CalculateNormals(this.vertices);
	
	this.vertexBuff =  gl.createBuffer(),	//Buffer for loading vertexes into the shader
	this.colorBuff  =  gl.createBuffer(),	//Buffer for loading colors into the shader
	this.normalBuff =  gl.createBuffer(),	//Buffer for loading normals into the shader
	this.texCorBuff =  gl.createBuffer(),	//Buffer for loading object indexes into the shader
	
	this.Duplicate = function()
	{
		var obj      = new Placeholder();
		obj.vertices = this.vertices.slice();
		obj.colors   = this.colors.slice();
		obj.UVMap    = this.UVMap.slice();		
		obj.Normals  = this.Normals.slice();
		
		obj.vertexBuff =  gl.createBuffer();
		obj.colorBuff  =  gl.createBuffer();
		obj.normalBuff =  gl.createBuffer();
		obj.texCorBuff =  gl.createBuffer();
		
		obj.Refresh();
		return obj;
	},
	
	this.Refresh = function()
	{
		//Loading the vertex information into the vertex buffer
		gl.bindBuffer( gl.ARRAY_BUFFER, this.vertexBuff );
		gl.bufferData( gl.ARRAY_BUFFER, new Float32Array(this.vertices), gl.STATIC_DRAW );

			
		//Loading the color information into the color buffer
		gl.bindBuffer( gl.ARRAY_BUFFER, this.colorBuff );
		gl.bufferData( gl.ARRAY_BUFFER, new Float32Array(this.colors), gl.STATIC_DRAW );
		
		
		//Loading the normals information into the color buffer
		gl.bindBuffer( gl.ARRAY_BUFFER, this.normalBuff );
		gl.bufferData( gl.ARRAY_BUFFER, new Float32Array(this.Normals), gl.STATIC_DRAW );

			
		//Loading the object index information into the texture coordinate buffer
		gl.bindBuffer( gl.ARRAY_BUFFER, this.texCorBuff );
		gl.bufferData( gl.ARRAY_BUFFER, new Float32Array(this.UVMap), gl.STATIC_DRAW );
	};
	
	this.Refresh();
}